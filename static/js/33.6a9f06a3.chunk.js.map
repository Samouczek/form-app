{"version":3,"file":"static/js/33.6a9f06a3.chunk.js","mappings":"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","sources":["components/RegistrationFormPage/style.ts","components/shared/CustomInput/style.ts","components/shared/CustomInput/index.tsx","queries/sendForm.ts","components/RegistrationFormPage/index.tsx","components/shared/CustomButton/style.ts","components/shared/CustomButton/index.tsx","components/shared/CustomContainer/index.tsx","constants/common.ts","constants/components.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { Box } from '@mui/material';\nimport { theme } from '@shared-styles/theme';\n\nexport const StyledBox = styled(Box)`\n\tpadding: 6.25rem 12rem 6.25rem 12rem;\n`;\n\nexport const StyledHeading = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\n\t> h1 {\n\t\tfont-weight: 800;\n\t\tfont-size: 1.25rem;\n\t\tline-height: 2rem;\n\t\ttext-align: right;\n\t\tletter-spacing: 0.15em;\n\t}\n\n\t&:after {\n\t\tcontent: '';\n\t\tdisplay: block;\n\t\theight: 0.5rem;\n\t\twidth: 10.375rem;\n\t\tbackground-color: ${theme.palette.primary.main};\n\t}\n`;\n","import { FormControl, FormLabel, styled, TextField } from '@mui/material';\n\nexport const StyledFormControl = styled(FormControl)`\n\t&.MuiFormControl-root {\n\t\tpadding-top: 1.5rem;\n\t\twidth: 100%;\n\t}\n\n\t.MuiFormHelperText-root {\n\t\ttext-align: right;\n\t}\n`;\n\nexport const StyledFormLabel = styled(FormLabel)``;\n\nexport const StyledTextField = styled(TextField)`\n\tinput {\n\t\tfont-size: 1.25rem;\n\t\tline-height: 2rem;\n\t}\n`;\n","import { StyledFormControl, StyledFormLabel, StyledTextField } from '@components/shared/CustomInput/style';\nimport { NComponents } from '@typings/components';\n\nconst CustomInput = ({ formLabel = '', ...props }: NComponents.TCustomFormControlProps): JSX.Element => {\n\treturn (\n\t\t<StyledFormControl>\n\t\t\t<StyledFormLabel>{formLabel}</StyledFormLabel>\n\t\t\t<StyledTextField {...props} />\n\t\t</StyledFormControl>\n\t);\n};\n\nexport default CustomInput;\n","import axios from 'axios';\n\nimport { NQueries } from '@typings/queries';\nimport { PATH_TO_SUBMIT_FORM } from '@constants/paths';\n\nexport const sendForm = async (\n\tname: string,\n\tpassword: string,\n\temail: string,\n\tphoneNumber: string,\n\tstarWars: NQueries.IStarWarsData[],\n): Promise<any> => {\n\tconst star_wars_data = JSON.stringify(starWars);\n\n\ttry {\n\t\tawait axios.post<NQueries.IRegistrationData>(\n\t\t\t`${PATH_TO_SUBMIT_FORM}`,\n\t\t\t{ name, password, email, phoneNumber, star_wars_data },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t} catch (error) {\n\t\tif (axios.isAxiosError(error)) {\n\t\t\treturn error.message;\n\t\t} else {\n\t\t\treturn error;\n\t\t}\n\t}\n};\n","import { MouseEvent, useContext } from 'react';\nimport { FormikProps, useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport CustomContainer from '@components/shared/CustomContainer';\nimport { StyledBox, StyledHeading } from '@components/RegistrationFormPage/style';\nimport CustomButton from '@components/shared/CustomButton';\nimport CustomInput from '@components/shared/CustomInput';\nimport { REGISTRATION } from '@constants/components';\nimport { BUTTON } from '@constants/common';\nimport { theme } from '@shared-styles/theme';\nimport { NComponents } from '@typings/components';\nimport { StarWarsContext } from '@context/StarWars';\nimport { sendForm } from '@queries/sendForm';\n\nconst phoneRegExp =\n\t/^(?:(?:(?:\\+|00)?48)|(?:\\(\\+?48\\)))?(?:1[2-8]|2[2-69]|3[2-49]|4[1-8]|5[0-9]|6[0-35-9]|[7-8][1-9]|9[145])\\d{7}$/;\n\nconst validationSchema = yup.object({\n\tname: yup.string().required(REGISTRATION.LOGIN_HELPER_TEXT),\n\tpassword: yup.string().required(REGISTRATION.PASSWORD_HELPER_TEXT),\n\temail: yup.string().email(REGISTRATION.PHONE_HELPER_TEXT).required(REGISTRATION.EMAIL_HELPER_TEXT_REQUIRED),\n\tphoneNumber: yup\n\t\t.string()\n\t\t.matches(phoneRegExp, REGISTRATION.PHONE_HELPER_TEXT)\n\t\t.required(REGISTRATION.PHONE_HELPER_TEXT_REQUIRED),\n});\n\nconst RegistrationFormPage = (): JSX.Element => {\n\tconst { starWars } = useContext(StarWarsContext);\n\tconst initialValues: NComponents.IFormData = {\n\t\tname: 'te',\n\t\tpassword: 'sdf',\n\t\temail: 'ts@tes.ts',\n\t\tphoneNumber: '600600600',\n\t};\n\n\tconst {\n\t\thandleSubmit,\n\t\tvalues: { name, password, email, phoneNumber },\n\t\ttouched: { name: touchedName, password: touchedPassword, email: touchedEmail, phoneNumber: touchedPhoneNumber },\n\t\thandleChange,\n\t\terrors: { name: nameError, password: passwordError, email: emailError, phoneNumber: phoneNumberError },\n\t}: FormikProps<NComponents.IFormData> = useFormik<NComponents.IFormData>({\n\t\tenableReinitialize: true,\n\t\tinitialValues,\n\t\tvalidationSchema,\n\t\tonSubmit: ({ name, password, email, phoneNumber }, { resetForm }) => {\n\t\t\tsendForm(name, password, email, phoneNumber, starWars);\n\t\t\tresetForm();\n\t\t},\n\t});\n\n\tconst handleSave = (event: MouseEvent<HTMLButtonElement>): void => {\n\t\tevent.preventDefault();\n\t\thandleSubmit();\n\t};\n\n\treturn (\n\t\t<CustomContainer>\n\t\t\t<StyledBox>\n\t\t\t\t<StyledHeading>\n\t\t\t\t\t<h1>{REGISTRATION.HEADING}</h1>\n\t\t\t\t</StyledHeading>\n\t\t\t\t<CustomInput\n\t\t\t\t\thelperText={touchedName && nameError}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={name}\n\t\t\t\t\terror={touchedName && Boolean(nameError)}\n\t\t\t\t\tid='name'\n\t\t\t\t\tname='name'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tformLabel={REGISTRATION.LOGIN_LABEL}\n\t\t\t\t\ttype='text'\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\thelperText={touchedPassword && passwordError}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={password}\n\t\t\t\t\terror={touchedPassword && Boolean(passwordError)}\n\t\t\t\t\tid='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tformLabel={REGISTRATION.PASSWORD_LABEL}\n\t\t\t\t\ttype='password'\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\thelperText={touchedEmail && emailError}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\terror={touchedEmail && Boolean(emailError)}\n\t\t\t\t\tid='email'\n\t\t\t\t\tname='email'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tformLabel={REGISTRATION.EMAIL_LABEL}\n\t\t\t\t\ttype='text'\n\t\t\t\t/>\n\t\t\t\t<CustomInput\n\t\t\t\t\thelperText={touchedPhoneNumber && phoneNumberError}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalue={phoneNumber}\n\t\t\t\t\terror={touchedPhoneNumber && Boolean(phoneNumberError)}\n\t\t\t\t\tid='phoneNumber'\n\t\t\t\t\tname='phoneNumber'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tvariant='standard'\n\t\t\t\t\tformLabel={REGISTRATION.PHONE_NUMBER_LABEL}\n\t\t\t\t\ttype='text'\n\t\t\t\t/>\n\t\t\t\t<CustomButton\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tbackgroundColor={theme.palette.primary.main}\n\t\t\t\t\tonClick={handleSave}\n\t\t\t\t\ttext={BUTTON.SAVE}\n\t\t\t\t/>\n\t\t\t</StyledBox>\n\t\t</CustomContainer>\n\t);\n};\n\nexport default RegistrationFormPage;\n","import styled from 'styled-components';\nimport { customThemeColors, theme } from '@shared-styles/theme';\n\nexport const StyledButton = styled.button<{ backgroundColor: string }>`\n\twidth: 14.75rem;\n\tpadding: 0.625rem 0 0.625rem 2.5rem;\n\tbackground-color: ${props => props.backgroundColor};\n\tbox-shadow: 0.625rem 0.25rem 0.25rem ${customThemeColors.buttonShadow};\n\tborder: none;\n\tborder-radius: 1.25rem;\n\tcolor: ${theme.palette.text.secondary};\n\ttext-shadow: 0 0.25rem 0.25rem rgba(0, 0, 0, 0.25);\n\t-webkit-text-stroke-color: ${customThemeColors.background};\n\t-webkit-text-stroke-width: 1px;\n\tfont-family: 'Lato', sans-serif;\n\tfont-style: italic;\n\tfont-weight: 400;\n\tfont-size: 1.875rem;\n\ttext-align: left;\n\tcursor: pointer;\n`;\n","import { StyledButton } from '@components/shared/CustomButton/style';\nimport { NComponents } from '@typings/components';\n\nconst CustomButton = ({ text, backgroundColor, ...rest }: NComponents.ICustomButton): JSX.Element => {\n\treturn (\n\t\t<StyledButton {...rest} backgroundColor={backgroundColor}>\n\t\t\t{text}\n\t\t</StyledButton>\n\t);\n};\n\nexport default CustomButton;\n","import { Container } from '@mui/material';\n\nimport { NComponents } from '@typings/components';\nimport { customThemeColors, theme } from '@shared-styles/theme';\n\nconst CustomContainer = ({ children }: NComponents.IChildProps): JSX.Element => {\n\treturn (\n\t\t<Container\n\t\t\tdisableGutters={true}\n\t\t\tmaxWidth={false}\n\t\t\tsx={{ backgroundColor: customThemeColors.background, height: '100vh' }}>\n\t\t\t<Container\n\t\t\t\tmaxWidth='md'\n\t\t\t\tdisableGutters={true}\n\t\t\t\tsx={{ backgroundColor: theme.palette.common.white, height: '100vh' }}>\n\t\t\t\t{children}\n\t\t\t</Container>\n\t\t</Container>\n\t);\n};\n\nexport default CustomContainer;\n","export const BUTTON = {\n\tREGISTRATION_FORM: 'formularz rejestracyjny',\n\tNEXT_PROFILES: 'next profiles',\n\tSAVE: 'zapisz',\n};\n","export const PERSON_PERFORMING_TASK = 'imie i nazwisko';\n\nexport const PROFILE = {\n\tAGE: 'age:',\n\tEYE_COLOR: 'eye color:',\n};\nexport const REGISTRATION = {\n\tHEADING: 'FORMULARZ REJESTRACYJNY',\n\tLOGIN_LABEL: 'Login:',\n\tPASSWORD_LABEL: 'Hasło:',\n\tEMAIL_LABEL: 'E-mail:',\n\tPHONE_NUMBER_LABEL: 'Numer telefonu:',\n\tLOGIN_HELPER_TEXT: 'Login jest wymagany',\n\tPASSWORD_HELPER_TEXT: 'Hasło jest wymagane',\n\tEMAIL_HELPER_TEXT: 'Nieprawidłowy format adresu e-mail',\n\tPHONE_HELPER_TEXT: 'Nieprawidłowy numer telefonu',\n\tEMAIL_HELPER_TEXT_REQUIRED: 'Email jest wymagany',\n\tPHONE_HELPER_TEXT_REQUIRED: 'Numer telefonu jest wymagany',\n\tACCEPT_REGULATIONS: 'Akceptuję Regulamin',\n\tACCEPT_REGULATIONS_HELPER_TEXT: 'Wymagana akceptacja regulaminu',\n};\n"],"names":["StyledBox","styled","Box","StyledHeading","theme","StyledFormControl","FormControl","StyledFormLabel","FormLabel","StyledTextField","TextField","formLabel","props","sendForm","name","password","email","phoneNumber","starWars","star_wars_data","JSON","stringify","axios","PATH_TO_SUBMIT_FORM","headers","Accept","message","validationSchema","yup","required","REGISTRATION","matches","useContext","StarWarsContext","useFormik","enableReinitialize","initialValues","onSubmit","resetForm","handleSubmit","values","touched","touchedName","touchedPassword","touchedEmail","touchedPhoneNumber","handleChange","errors","nameError","passwordError","emailError","phoneNumberError","CustomContainer","helperText","onChange","value","error","Boolean","id","autoComplete","variant","type","CustomButton","backgroundColor","onClick","event","preventDefault","text","BUTTON","StyledButton","customThemeColors","rest","children","disableGutters","maxWidth","sx","height","REGISTRATION_FORM","NEXT_PROFILES","SAVE","PERSON_PERFORMING_TASK","PROFILE","AGE","EYE_COLOR","HEADING","LOGIN_LABEL","PASSWORD_LABEL","EMAIL_LABEL","PHONE_NUMBER_LABEL","LOGIN_HELPER_TEXT","PASSWORD_HELPER_TEXT","EMAIL_HELPER_TEXT","PHONE_HELPER_TEXT","EMAIL_HELPER_TEXT_REQUIRED","PHONE_HELPER_TEXT_REQUIRED","ACCEPT_REGULATIONS","ACCEPT_REGULATIONS_HELPER_TEXT"],"sourceRoot":""}